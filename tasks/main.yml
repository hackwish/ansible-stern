# tasks file for ansible-stern
- name: Get latest Release from stern
  shell: curl -Lo /tmp/stern.tar.gz https://github.com/stern/stern/releases/download/$(curl -s https://api.github.com/repos/stern/stern/releases/latest | grep tag_name | cut -d '"' -f 4)/stern_$(curl -s https://api.github.com/repos/stern/stern/releases/latest | grep tag_name | cut -d '"' -f 4| tr -d v)_{{ ansible_system | lower }}_amd64.tar.gz
  args:
    warn: no
  when: ansible_architecture == 'x86_64'
  tags: stern

- name: Unarchive a file
  shell: tar -xvf /tmp/stern.tar.gz -C /usr/local/bin/ stern
  args:
    warn: no
  tags: stern

- name: Verify stern exists
  stat: path=/usr/local/bin/stern
  register: stern_stat
  tags: stern

# Clear Per existing user config  - DEPRECATION
- name: list users to clear old stern
  shell: |
    getent passwd | awk -F: '$3 > 999 {print $1}'
  register: users
  tags: stern

- debug:
    var: users
    verbosity: 2

- name: Remove old opt stern directory
  ansible.builtin.file:
    path: /opt/stern
    state: absent
  when: stern_stat.stat.exists
  tags: stern

- name: Remove stern old binary file
  ansible.builtin.file:
    path: /home/{{ item }}/.local/bin/stern
    state: absent
  with_items: "{{ users.stdout_lines }}"
  when: stern_stat.stat.exists
  tags: stern


- name: remove stern on users bashrc
  lineinfile:
    dest: /home/{{ item }}/.bashrc
    state: absent
    line: 'export PATH="/opt/stern/:$PATH"'
  with_items: "{{ users.stdout_lines }}"
  tags: stern
  ignore_errors: true

- name: remove stern on skel bashrc
  lineinfile:
    dest: /etc/skel/.bashrc
    state: absent
    line: 'export PATH="/opt/stern/:$PATH"'
  tags: stern

- name: Change file ownership, group and permissions
  ansible.builtin.file:
    path: /usr/local/bin/stern
    owner: root
    group: root
    mode: '0755'
  tags: stern

- command: stern -v
  register: result_stern
  failed_when: false
  changed_when: false
  tags: stern

- debug:
    var: result_stern.stdout
  tags: stern
